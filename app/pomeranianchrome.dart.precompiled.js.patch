--- pomeranianchrome_sample.dart.precompiled.js	Thu Mar 27 10:27:43 2014
+++ pomeranianchrome.dart.precompiled.js	Thu Mar 27 10:26:43 2014
@@ -8878,7 +8878,7 @@ var $$ = {};
   "^": "",
   main: [function() {
     var t1 = $.get$app().window;
-    R.View$(L.Controller$(J.$index$asx(t1.current$0().jsProxy, "alarm")), t1.current$0(), window, J.$index$asx(t1.current$0().jsProxy, "alarm"));
+    R.View$(L.Controller$(t1.current$0().jsProxy._jsObject["alarm"]), t1.current$0(), window,t1.current$0().jsProxy._jsObject["alarm"]);
   }, "call$0", "main$closure", 0, 0, 101]
 },
 1],
@@ -8889,7 +8889,7 @@ var $$ = {};
     Controller$1: function(alarm) {
       var t1;
       if (alarm != null)
-        this.timeout = P.DateTime$fromMillisecondsSinceEpoch(J.round$0$n(alarm.get$scheduledTime()), false);
+        this.timeout = P.DateTime$fromMillisecondsSinceEpoch(J.round$0$n(alarm.o.jsProxy._jsObject.scheduledTime), false);
       t1 = $.get$alarms()._onAlarm._controller;
       H.setRuntimeTypeInfo(new P._BroadcastStream(t1), [H.getTypeArgumentByIndex(t1, 0)]).listen$1(new L.Controller_closure(this));
       t1 = $.get$notifications()._onClicked._controller;
@@ -9043,7 +9043,7 @@ var $$ = {};
       t1 = this._pomeranian_view$_window.jsProxy.callMethod$1("getBounds");
       bounds = (t1 == null ? null : new Z.Bounds0(t1)).jsProxy;
       t1 = J.getInterceptor$asx(bounds);
-      t2 = J.$sub$n(t1.$index(bounds, "width"), 30);
+      t2 = J.$sub$n(bounds._jsObject["width"], 30);
       this._buttonsContainerWidth = t2;
       t3 = this.currentAnimation;
       t4 = t3._data;
@@ -9060,8 +9060,8 @@ var $$ = {};
       }
       t2 = this._jsWindow;
       timerText = t2.document.querySelector("#timer_text_id");
-      computedMarginTop = J.$tdiv$n(J.$sub$n(J.$sub$n(t1.$index(bounds, "height"), 160), timerText.clientHeight), 2);
-      computedMarginBottom = J.$sub$n(J.$sub$n(J.$sub$n(t1.$index(bounds, "height"), 160), timerText.clientHeight), computedMarginTop);
+      computedMarginTop = J.$tdiv$n(J.$sub$n(J.$sub$n(bounds._jsObject["height"], 160), timerText.clientHeight), 2);
+      computedMarginBottom = J.$sub$n(J.$sub$n(J.$sub$n(bounds._jsObject["height"], 160), timerText.clientHeight), computedMarginTop);
       C.Window_methods.get$animationFrame(t2).then$1(new R.View_resizeWindow_closure(timerText, computedMarginTop, computedMarginBottom));
     }, "call$1", "get$resizeWindow", 2, 0, 212, 182, []],
     animateNow$0: [function() {
@@ -9081,7 +9081,7 @@ var $$ = {};
         J.set$display$x(t1.document.querySelector("#long_button_id").style, "none");
         J.set$display$x(t3, "none");
         J.set$display$x(t2, "none");
-        t1.document.querySelector("#title_id").textContent = J.get$name$x(alarm);
+        t1.document.querySelector("#title_id").textContent = alarm.o.jsProxy._jsObject.name;
         this.timerLoop$0();
       }
       t1 = this._app;
